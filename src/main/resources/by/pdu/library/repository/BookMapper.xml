<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="by.pdu.library.repository.BookMapper">

    <resultMap id="editionResultMap" type="by.pdu.library.domain.Edition">
        <id column="edition_id" property="id"/>
        <result column="edition_year" property="year"/>
        <result column="edition_image" property="image"/>
        <result column="edition_name" property="name"/>
        <result column="edition_price" property="price"/>

        <collection property="language" javaType="by.pdu.library.domain.Language"
                    resultMap="by.pdu.library.repository.LanguageMapper.languageResultMap"/>

        <collection property="publishingHouse" javaType="by.pdu.library.domain.PublishingHouse"
                    resultMap="by.pdu.library.repository.PublishingHouseMapper.publishingHouseResultMap"/>

    </resultMap>

    <resultMap id="bookResultMap" type="by.pdu.library.domain.Book">
        <id column="edition_id" property="id"/>
        <result column="edition_year" property="year"/>
        <result column="edition_image" property="image"/>
        <result column="edition_name" property="name"/>
        <result column="edition_price" property="price"/>
        <result column="book_description" property="description"/>

        <collection property="language" javaType="by.pdu.library.domain.Language"
                    resultMap="by.pdu.library.repository.LanguageMapper.languageResultMap"/>

        <collection property="publishingHouse" javaType="by.pdu.library.domain.PublishingHouse"
                    resultMap="by.pdu.library.repository.PublishingHouseMapper.publishingHouseResultMap"/>

        <collection property="catalog" javaType="by.pdu.library.domain.Catalog"
                    resultMap="by.pdu.library.repository.CatalogMapper.catalogResultMap"/>

        <collection property="authors" javaType="java.util.List"
                    resultMap="by.pdu.library.repository.AuthorMapper.authorResultMap"/>
    </resultMap>

    <resultMap id="periodicResultMap" type="by.pdu.library.domain.Periodic">
        <id column="edition_id" property="id"/>
        <result column="edition_year" property="year"/>
        <result column="edition_image" property="image"/>
        <result column="edition_name" property="name"/>
        <result column="edition_price" property="price"/>
        <result column="periodic_month" property="month"/>
        <result column="periodic_number" property="number"/>

        <collection property="language" javaType="by.pdu.library.domain.Language"
                    resultMap="by.pdu.library.repository.LanguageMapper.languageResultMap"/>

        <collection property="publishingHouse" javaType="by.pdu.library.domain.PublishingHouse"
                    resultMap="by.pdu.library.repository.PublishingHouseMapper.publishingHouseResultMap"/>

        <collection property="articles" javaType="java.util.List"
                    resultMap="by.pdu.library.repository.ArticleMapper.articleResultMap"/>
    </resultMap>

    <select id="getEdition" resultMap="by.pdu.library.repository.BookMapper.editionResultMap">
        SELECT
            e.id as "edition_id",
            e.year as "edition_year",
            e.image as "edition_image",
            e.name as "edition_name",
            e.price as "edition_price",
            l.id as "language_id",
            l.name as "language_name",
            p.id as "publishingHouse_id",
            p.name as "publishingHouse_name"
        FROM
            ADMIN.EDITION e
            LEFT JOIN ADMIN.LANGUAGE l ON e.LANGUAGE_ID=l.id
            LEFT JOIN ADMIN.PUBLISHING_HOUSE p ON e.PUBLISHING_HOUSE_ID = p.id
        WHERE
            e.REMOVED_DATE IS NULL
            <if test="name != null">
                AND lower(e.NAME) like lower(#{name})
            </if>
    </select>

    <select id="getBookById" resultMap="by.pdu.library.repository.BookMapper.bookResultMap">
        SELECT
        e.id as "edition_id",
        e.year as "edition_year",
        e.image as "edition_image",
        e.name as "edition_name",
        e.price as "edition_price",
        l.id as "language_id",
        l.name as "language_name",
        p.id as "publishingHouse_id",
        p.name as "publishingHouse_name",
        c.id as "catalog_id",
        c.name AS "catalog_name",
        r.id AS "root_catalog_id",
        r.name AS "root_catalog_name",
        b.description as "book_description",
        a.id as "author_id",
        a.name as "author_name"
        FROM
        ADMIN.EDITION e
        INNER JOIN ADMIN.BOOKS b ON e.id = b.edition_id
        LEFT JOIN ADMIN.LANGUAGE l ON e.LANGUAGE_ID=l.id
        LEFT JOIN ADMIN.PUBLISHING_HOUSE p ON e.PUBLISHING_HOUSE_ID = p.id
        LEFT JOIN ADMIN.CATALOG c ON b.CATALOG_ID = c.ID
        LEFT JOIN ADMIN.CATALOG r ON c.root_id = r.id
        LEFT JOIN ADMIN.AUTHORS_BOOK ab ON ab.BOOK_ID = e.id
        LEFT JOIN ADMIN.AUTHORS a ON ab.author_id = a.id
        WHERE
        e.REMOVED_DATE IS NULL
        AND e.id = #{id}
    </select>

    <select id="getBook" resultMap="by.pdu.library.repository.BookMapper.bookResultMap">
        SELECT
            e.id as "edition_id",
            e.year as "edition_year",
            e.image as "edition_image",
            e.name as "edition_name",
            e.price as "edition_price",
            l.id as "language_id",
            l.name as "language_name",
            p.id as "publishingHouse_id",
            p.name as "publishingHouse_name",
            c.id as "catalog_id",
            c.name AS "catalog_name",
            r.id AS "root_catalog_id",
            r.name AS "root_catalog_name",
            b.description as "book_description",
            a.id as "author_id",
            a.name as "author_name"
        FROM
            ADMIN.EDITION e
            INNER JOIN ADMIN.BOOKS b ON e.id = b.edition_id
            LEFT JOIN ADMIN.LANGUAGE l ON e.LANGUAGE_ID=l.id
            LEFT JOIN ADMIN.PUBLISHING_HOUSE p ON e.PUBLISHING_HOUSE_ID = p.id
            LEFT JOIN ADMIN.CATALOG c ON b.CATALOG_ID = c.ID
            LEFT JOIN ADMIN.CATALOG r ON c.root_id = r.id
            LEFT JOIN ADMIN.AUTHORS_BOOK ab ON ab.BOOK_ID = e.id
            LEFT JOIN ADMIN.AUTHORS a ON ab.author_id = a.id
        WHERE
            e.REMOVED_DATE IS NULL
    </select>

    <select id="getPeriodic" resultMap="by.pdu.library.repository.BookMapper.periodicResultMap">
        SELECT
            e.id as "edition_id",
            e.year as "edition_year",
            e.image as "edition_image",
            e.name as "edition_name",
            e.price as "edition_price",
            l.id as "language_id",
            l.name as "language_name",
            ph.id as "publishingHouse_id",
            ph.name as "publishingHouse_name",
            p.number_periodic as "periodic_number",
            p.month as "periodic_month",
            art.id as "article_id",
            art.name as "article_name",
            a.id as "author_id",
            a.name as "author_name",
            c.id as "catalog_id",
            c.name AS "catalog_name",
            r.id AS "root_catalog_id",
            r.name AS "root_catalog_name"
        FROM
            ADMIN.EDITION e
            INNER JOIN ADMIN.periodic p ON e.id = p.edition_id
            LEFT JOIN ADMIN.LANGUAGE l ON e.LANGUAGE_ID=l.id
            LEFT JOIN ADMIN.publishing_house ph ON e.PUBLISHING_HOUSE_ID = ph.id
            LEFT JOIN ADMIN.ARTICLE_PERIODIC ap ON ap.periodic_id = p.edition_id
            LEFT JOIN ADMIN.ARTICLE art ON art.id = ap.article_id
            LEFT JOIN ADMIN.AUTHORS_ARTICLE ab ON ab.ARTICLE_ID = art.id
            LEFT JOIN ADMIN.AUTHORS a ON ab.author_id = a.id
            LEFT JOIN ADMIN.CATALOG c ON c.id = art.catalog_id
            LEFT JOIN ADMIN.CATALOG r ON c.root_id = r.id
        WHERE
            e.REMOVED_DATE IS NULL
    </select>

    <select id="getPeriodicById" resultMap="by.pdu.library.repository.BookMapper.periodicResultMap">
        SELECT
        e.id as "edition_id",
        e.year as "edition_year",
        e.image as "edition_image",
        e.name as "edition_name",
        e.price as "edition_price",
        l.id as "language_id",
        l.name as "language_name",
        ph.id as "publishingHouse_id",
        ph.name as "publishingHouse_name",
        p.number_periodic as "periodic_number",
        p.month as "periodic_month",
        art.id as "article_id",
        art.name as "article_name",
        a.id as "author_id",
        a.name as "author_name",
        c.id as "catalog_id",
        c.name AS "catalog_name",
        r.id AS "root_catalog_id",
        r.name AS "root_catalog_name"
        FROM
        ADMIN.EDITION e
        INNER JOIN ADMIN.periodic p ON e.id = p.edition_id
        LEFT JOIN ADMIN.LANGUAGE l ON e.LANGUAGE_ID=l.id
        LEFT JOIN ADMIN.publishing_house ph ON e.PUBLISHING_HOUSE_ID = ph.id
        LEFT JOIN ADMIN.ARTICLE_PERIODIC ap ON ap.periodic_id = p.edition_id
        LEFT JOIN ADMIN.ARTICLE art ON art.id = ap.article_id
        LEFT JOIN ADMIN.AUTHORS_ARTICLE ab ON ab.ARTICLE_ID = art.id
        LEFT JOIN ADMIN.AUTHORS a ON ab.author_id = a.id
        LEFT JOIN ADMIN.CATALOG c ON c.id = art.catalog_id
        LEFT JOIN ADMIN.CATALOG r ON c.root_id = r.id
        WHERE
        e.REMOVED_DATE IS NULL
        AND e.id = #{id}
    </select>

    <insert id="insertBook">
         {call ADMIN.CREATE_BOOK(#{id, jdbcType =  INTEGER, mode = IN},#{year, jdbcType =  INTEGER, mode = IN},
         #{image, jdbcType =  VARCHAR, mode = IN},#{name, jdbcType =  VARCHAR, mode = IN},
         #{language, jdbcType =  INTEGER, mode = IN},#{price, jdbcType =  FLOAT, mode = IN},
         #{publishing, jdbcType =  INTEGER, mode = IN},#{description, jdbcType =  VARCHAR, mode = IN},
         #{catalog, jdbcType =  VARCHAR, mode = IN})}
    </insert>

    <insert id="updateBook">
         {call ADMIN.UPDATE_BOOK(#{id, jdbcType =  INTEGER, mode = IN},#{year, jdbcType =  INTEGER, mode = IN},
         #{image, jdbcType =  VARCHAR, mode = IN},#{name, jdbcType =  VARCHAR, mode = IN},
         #{language, jdbcType =  INTEGER, mode = IN},#{price, jdbcType =  FLOAT, mode = IN},
         #{publishing, jdbcType =  INTEGER, mode = IN},#{description, jdbcType =  VARCHAR, mode = IN},
         #{catalog, jdbcType =  VARCHAR, mode = IN})}
    </insert>

    <insert id="updatePeriodic">
         {call ADMIN.UPDATE_PERIODIC(#{id, jdbcType =  INTEGER, mode = IN},#{year, jdbcType =  INTEGER, mode = IN},
         #{image, jdbcType =  VARCHAR, mode = IN},#{name, jdbcType =  VARCHAR, mode = IN},
         #{language, jdbcType =  INTEGER, mode = IN},#{price, jdbcType =  FLOAT, mode = IN},
         #{publishing, jdbcType =  INTEGER, mode = IN},#{number, jdbcType =  INTEGER, mode = IN},
         #{month, jdbcType =  INTEGER, mode = IN})}
    </insert>

    <delete id="removeAllAuthors">
        DELETE FROM ADMIN.AUTHORS_BOOK
        WHERE BOOK_ID =#{id}
    </delete>

    <delete id="removeAllArticle">
        DELETE FROM ADMIN.ARTICLE_PERIODIC
        WHERE PERIODIC_ID =#{id}
    </delete>

    <select id="nextId" resultType="java.lang.Long">
        SELECT ADMIN.EDITION_SEQ.NEXTVAL FROM DUAL
    </select>

    <insert id="insertArticle">
         INSERT INTO ADMIN.ARTICLE_PERIODIC(ARTICLE_ID,PERIODIC_ID)
         VALUES (#{articleId},#{periodicId})
    </insert>

    <insert id="insertAuthor">
         INSERT INTO ADMIN.AUTHORS_BOOK(AUTHOR_ID,BOOK_ID)
         VALUES (#{authorId},#{bookId})
    </insert>

    <update id="removeEdition">
        UPDATE ADMIN.EDITION
        SET
            REMOVED_DATE = (SELECT sysdate FROM DUAL)
        WHERE id = #{id}
    </update>

</mapper>